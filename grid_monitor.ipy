import csv
import os
import re
import sys
import time, threading
import getpass
import grid_utils
            
def check_for_results(result_file_name):
    user = getpass.getuser() 
    while True:
        #print "Es ist nun %s Uhr" % time.strftime("%H:%M:%S")
        if (user == 'witali'):
            status = ''
        else:
            status = !qstat
        nr_jobs = len(status)-2
        if nr_jobs < 0:
            nr_jobs = 0
        #TODO ausprobieren zum zaehlen der Zeilen: !qstat|wc -l
        #nr_lines = status.count('@') #fkt. nicht
        #nr_lines = status.count('\n') #fkt. nicht
        #nr_lines = status.count("waswolinskiy")
        print nr_jobs, 'Jobs remain at ', time.strftime("%H:%M:%S")
        sys.stdout.flush()
        if nr_jobs == 0:
            grid_utils.merge_files(result_file_name)
            break;
        else:
            time.sleep(300.0)

global timer
if __name__ == '__main__':
    
    result_file_name = "results.csv"
    timer = threading.Timer(0, check_for_results, [result_file_name]) 
    timer.start()